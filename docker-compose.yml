services:
  mysql:
    image: biarms/mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    restart: always


  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASS}
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    restart: always


  owl_tiktok_admin:
  container_name: owl_tiktok_admin
  image: owloooo/owl_tiktok_admin:1.0
  ports:
    - "${ADMIN_PORT}:8989"
  environment:
    SPRING_PROFILES_ACTIVE: prod
    JDBC_TYPE: mysql
    JDBC_DRIVER: com.mysql.cj.jdbc.Driver
    JDBC_URL: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${OWL_DATABASE}?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    JDBC_USERNAME: ${MYSQL_USERNAME}
    JDBC_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    JDBC_TEST_SQL: SELECT 1
    REDIS_HOST: ${REDIS_HOST}
    REDIS_PORT: ${REDIS_PORT}
    REDIS_PASS: ${REDIS_PASS}
    REDIS_DATABASE: 3
  depends_on:
    - mysql
    - redis
  restart: always

  owl_tiktok_web:
    container_name: owl_tiktok_web
    image: owloooo/owl_tiktok_web:1.0  
    environment:
      - DOMAIN=${API_URL}
    ports:
      - "${WEB_PORT}:80"
    volumes:
      - /owl/favicon.png:/usr/share/nginx/html/images/favicon.png:ro,z
    depends_on:
      - owl_tiktok_admin
    restart: always
    
  
    
  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx
    ports:
      - '80:80'        # HTTP
      - '81:81'        # Nginx Proxy Manager admin
      - '443:443'      # HTTPS
    environment:
      DB_MYSQL_HOST: ${MYSQL_HOST}
      DB_MYSQL_PORT: ${MYSQL_PORT}
      DB_MYSQL_USER: ${MYSQL_USERNAME}
      DB_MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_MYSQL_NAME: ${MYSQL_DATABASE}
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - mysql
    restart: always

volumes:
  mysql_data:
